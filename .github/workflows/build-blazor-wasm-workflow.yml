name: Build & Publish Blazor WASM application

on:
  workflow_call:
    inputs:
      dotnet-version:
        description: Version of dotnet to use
        type: string
        required: false
        default: 6.0.x
        
      project-folder:
        description: The folder containing the project to build
        type: string
        default: .
        
      restore-from-private-nuget:
        description: Restore from private nuget packages
        type: boolean
        default: false
        
      nuget-source:
        description: nuget registry source
        type: string
        required: false
      
      BLOB_STORAGE_ACCOUNT_NAME:
        description: Blob storage name
        type: string
        required: false
        
      cdn-profile-name:
        description: CDN Profile name
        type: string
        required: false
        
      cdn-name:
        description: CDN name
        type: string
        required: false
        
      resource-group:
        description: Azure resource group
        type: string
        required: false
    secrets:
      nuget-auth:
        description: GitHub PAT token
        required: false
      
      nuget-username:
        description: GitHub username
        required: false
      
      AZURE_CREDENTIALS:
        description: Blob storagecredentials
        required: false
      

jobs:
  build-solution:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.project-folder }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
      
      - name: Add private Nuget package source
        if: ${{inputs.restore-from-private-nuget}}
        run: dotnet nuget add source --username ${{ secrets.nuget-username }} --password ${{ secrets.nuget-auth }} --store-password-in-clear-text --name github ${{ inputs.nuget-source }}
        
      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal
        
      - name: Publish
        run: dotnet publish --configuration Release 
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: webapp
          path: ${{ inputs.project-folder }}/bin/Release/net6.0/wwwroot

  deploy_build:
     # Only deploy code from master
      if: (github.event_name != 'pull_request')
      name: Deploy
      needs: build-solution
      runs-on: ubuntu-latest
      steps:

    # Download artifacts
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: webapp

    # Authentication
      - name: Authenticate with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS  }}

    # Deploy to storage using CLI
      - name: Deploy to storage using CLI
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            az storage blob upload-batch --account-name ${{ inputs.BLOB_STORAGE_ACCOUNT_NAME }} --auth-mode key -s . -d '$web'
   # Purge old assets in Azure CDN
      - name: Purge old assets in Azure CDN
        uses: azure/CLI@v1
        with:
         inlineScript: |
            az cdn endpoint purge --content-paths  "/*" --profile-name ${{ inputs.cdn-profile-name }} --name ${{ inputs.cdn-name }} --resource-group ${{ inputs.resource-group }}
   # Azure logout
      - name: logout
        working-directory: .
        run: |
          az logout
        if: always()
